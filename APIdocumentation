Quick Start Guide
For developers eager to hit the ground running with the CoinMarketCap API here are a few quick steps to make your first call with the API.

Sign up for a free Developer Portal account. You can sign up at pro.coinmarketcap.com - This is our live production environment with the latest market data. Select the free Basic plan if it meets your needs or upgrade to a paid tier.
Copy your API Key. Once you sign up you'll land on your Developer Portal account dashboard. Copy your API from the API Key box in the top left panel.
Make a test call using your key. You may use the code examples provided below to make a test call with your programming language of choice. This example fetches all active cryptocurrencies by market cap and return market values in USD.
Be sure to replace the API Key in sample code with your own and use API domain pro-api.coinmarketcap.com or use the test API Key b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c for sandbox-api.coinmarketcap.com testing with our sandbox environment. Please note that our sandbox api has mock data and should not be used in your application.
Postman Collection To help with development, we provide a fully featured postman collection that you can import and use immediately! Read more here.
Implement your application. Now that you've confirmed your API Key is working, get familiar with the API by reading the rest of this API Reference and commence building your application!
Note: Making HTTP requests on the client side with Javascript is currently prohibited through CORS configuration. This is to protect your API Key which should not be visible to users of your application so your API Key is not stolen. Secure your API Key by routing calls through your own backend service.

View Quick Start Code Examples

/* Example in Node.js */
const axios = require('axios');

let response = null;
new Promise(async (resolve, reject) => {
  try {
    response = await axios.get('https://sandbox-api.coinmarketcap.com/v1/cryptocurrency/listings/latest', {
      headers: {
        'X-CMC_PRO_API_KEY': 'b54bcf4d-1bca-4e8e-9a24-22ff2c3d462c',
      },
    });
  } catch(ex) {
    response = null;
    // error
    console.log(ex);
    reject(ex);
  }
  if (response) {
    // success
    const json = response.data;
    console.log(json);
    resolve(json);
  }
});

Authentication
Acquiring an API Key
All HTTP requests made against the CoinMarketCap API must be validated with an API Key. If you don't have an API Key yet visit the API Developer Portal to register for one.

Using Your API Key
You may use any server side programming language that can make HTTP requests to target the CoinMarketCap API. All requests should target domain https://pro-api.coinmarketcap.com.

You can supply your API Key in REST API calls in one of two ways:

Preferred method: Via a custom header named X-CMC_PRO_API_KEY
Convenience method: Via a query string parameter named CMC_PRO_API_KEY
Security Warning: It's important to secure your API Key against public access. The custom header option is strongly recommended over the querystring option for passing your API Key in a production environment.

API Key Usage Credits
Most API plans include a daily and monthly limit or "hard cap" to the number of data calls that can be made. This usage is tracked as API "call credits" which are incremented 1:1 against successful (HTTP Status 200) data calls made with your key with these exceptions:

Account management endpoints, usage stats endpoints, and error responses are not included in this limit.
Paginated endpoints: List-based endpoints track an additional call credit for every 100 data points returned (rounded up) beyond our 100 data point defaults. Our lightweight /map endpoints are not included in this limit and always count as 1 credit. See individual endpoint documentation for more details.
Bundled API calls: Many endpoints support resource and currency conversion bundling. Bundled resources are also tracked as 1 call credit for every 100 resources returned (rounded up). Optional currency conversion bundling using the convert parameter also increment an additional API call credit for every conversion requested beyond the first.
You can log in to the Developer Portal to view live stats on your API Key usage and limits including the number of credits used for each call. You can also find call credit usage in the JSON response for each API call. See the status object for details. You may also use the /key/info endpoint to quickly review your usage and when daily/monthly credits reset directly from the API.

Note: "day" and "month" credit usage periods are defined relative to your API subscription. For example, if your monthly subscription started on the 5th at 5:30am, this billing anchor is also when your monthly credits refresh each month. The free Basic tier resets each day at UTC midnight and each calendar month at UTC midnight.

Endpoint Overview
The CoinMarketCap API is divided into 8 top-level categories
Endpoint Category	Description
/cryptocurrency/*	Endpoints that return data around cryptocurrencies such as ordered cryptocurrency lists or price and volume data.
/exchange/*	Endpoints that return data around cryptocurrency exchanges such as ordered exchange lists and market pair data.
/global-metrics/*	Endpoints that return aggregate market data such as global market cap and BTC dominance.
/tools/*	Useful utilities such as cryptocurrency and fiat price conversions.
/blockchain/*	Endpoints that return block explorer related data for blockchains.
/fiat/*	Endpoints that return data around fiats currencies including mapping to CMC IDs.
/partners/*	Endpoints for convenient access to 3rd party crypto data.
/key/*	API key administration endpoints to review and manage your usage.
/content/*	Endpoints that return cryptocurrency-related news, headlines, articles, posts, and comments.
Endpoint paths follow a pattern matching the type of data provided
Endpoint Path	Endpoint Type	Description
*/latest	Latest Market Data	Latest market ticker quotes and averages for cryptocurrencies and exchanges.
*/historical	Historical Market Data	Intervals of historic market data like OHLCV data or data for use in charting libraries.
*/info	Metadata	Cryptocurrency and exchange metadata like block explorer URLs and logos.
*/map	ID Maps	Utility endpoints to get a map of resources to CoinMarketCap IDs.
Cryptocurrency and exchange endpoints provide 2 different ways of accessing data depending on purpose
Listing endpoints: Flexible paginated */listings/* endpoints allow you to sort and filter lists of data like cryptocurrencies by market cap or exchanges by volume.
Item endpoints: Convenient ID-based resource endpoints like */quotes/* and */market-pairs/* allow you to bundle several IDs; for example, this allows you to get latest market quotes for a specific set of cryptocurrencies in one call.
Standards and Conventions
Each HTTP request must contain the header Accept: application/json. You should also send an Accept-Encoding: deflate, gzip header to receive data fast and efficiently.

Endpoint Response Payload Format
All endpoints return data in JSON format with the results of your query under data if the call is successful.

A Status object is always included for both successful calls and failures when possible. The Status object always includes the current time on the server when the call was executed as timestamp, the number of API call credits this call utilized as credit_count, and the number of milliseconds it took to process the request as elapsed. Any details about errors encountered can be found under the error_code and error_message. See Errors and Rate Limits for details on errors.

{
  "data" : {
    ...
  },
  "status": {
    "timestamp": "2018-06-06T07:52:27.273Z",
    "error_code": 400,
    "error_message": "Invalid value for \"id\"",
    "elapsed": 0,
    "credit_count": 0
  }
}
